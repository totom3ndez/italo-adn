---
const inputStyle =
	'rounded-lg w-full placeholder:italic placeholder:opacity-50 rounded-md border border-lightGreen bg-white py-2 px-4 text-base font-medium text-black outline-none focus:border-lightRed focus:shadow-md'
---

<section id="contact" class="py-10">
	<div
		class="animation-top z-auto mx-auto flex w-full max-w-lg flex-col gap-3 rounded-lg border-none bg-lightGreen p-10 text-white shadow-2xl"
	>
		<div class="mb-5 rounded-lg p-3 text-black">
			<p class="mb-2 text-center text-xl font-bold uppercase underline underline-offset-4">
				Contacto
			</p>
			<p class="text-md text-center md:text-lg">
				Utilizá este formulario para despejar cualquier duda que tengas. Nos pondremos en contacto a
				la brevedad.
			</p>
		</div>
		<form
			action="https://api.web3forms.com/submit"
			method="POST"
			id="form"
			class="needs-validation z-10 mx-auto flex w-3/4 flex-col gap-4 md:max-w-lg"
			data-astro-reload
			novalidate
		>
			<!-- Add your Web3Forms Access Key -->
			<input type="hidden" name="access_key" value="639c7b82-a400-4237-8ff4-9ebdc4d2cc05" />

			<input type="checkbox" class="hidden" style="display:none" name="botcheck" />
			<div class="flex flex-col place-content-center">
				<input
					autocomplete="given-name"
					type="text"
					placeholder="Nombre completo"
					required
					class={inputStyle}
					name="name"
				/>
				<div class="empty-feedback invalid-feedback mt-1 text-sm text-red-400">
					Por favor escribe tu nombre completo.
				</div>
			</div>
			<div class="flex flex-col place-content-center">
				<label for="email_address" class="sr-only">Email</label><input
					id="email_address"
					type="email"
					placeholder="Email"
					name="email"
					required
					class={inputStyle}
				/>
				<div class="empty-feedback mt-1 text-sm text-red-400">Por favor escribe tu email.</div>
				<div class="invalid-feedback mt-1 text-sm text-red-400">
					Por favor escribe un email correcto.
				</div>
			</div>
			<div class="flex flex-col place-content-center">
				<textarea
					name="message"
					required
					placeholder="Tu mensaje"
					class:list={[inputStyle, 'h-[150px] resize-none']}></textarea>
				<div class="empty-feedback invalid-feedback mt-1 text-sm text-red-400">
					Por favor escribe tu mensaje.
				</div>
			</div>
			<button
				type="submit"
				class="mx-auto w-full rounded-full bg-yellow px-5 py-2.5 text-center text-sm font-medium text-black hover:bg-gray-700 hover:text-white focus:ring-gray-700"
				>Enviar</button
			>
			<div id="result" class="mt-3 text-center"></div>
		</form>
		<script src="https://web3forms.com/client/script.js" async defer></script>
	</div>

	<style>
		.invalid-feedback,
		.empty-feedback {
			display: none;
		}

		.was-validated :placeholder-shown:invalid ~ .empty-feedback {
			display: block;
		}

		.was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
			display: block;
		}

		.is-invalid,
		.was-validated :invalid {
			border-color: #dc3545;
		}
	</style>

	<script is:inline>
		// astro:page-load to support view Transitions.
		// use DOMContentLoaded event if you are not using View Transitions

		document.addEventListener(
			'astro:page-load',
			() => {
				const form = document.getElementById('form')
				const result = document.getElementById('result')

				form.addEventListener('submit', function (e) {
					e.preventDefault()
					form.classList.add('was-validated')
					if (!form.checkValidity()) {
						form.querySelectorAll(':invalid')[0].focus()
						return
					}
					const formData = new FormData(form)
					const object = Object.fromEntries(formData)
					const json = JSON.stringify(object)

					result.innerHTML = 'Sending...'

					fetch('https://api.web3forms.com/submit', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
							Accept: 'application/json'
						},
						body: json
					})
						.then(async (response) => {
							let json = await response.json()
							if (response.status == 200) {
								result.classList.add('text-green-500', 'bg-white', 'p-3', 'rounded-lg')
								result.innerHTML = 'Mensaje enviado con éxito.'
							} else {
								console.log(response)
								result.classList.add('text-red-500')
								result.innerHTML = json.message
							}
						})
						.catch((error) => {
							console.log(error)
							result.innerHTML = 'Algo va mal!'
						})
						.then(function () {
							form.reset()
							form.classList.remove('was-validated')
							setTimeout(() => {
								result.style.display = 'none'
							}, 5000)
						})
				})
			},
			{ once: true }
		)
	</script>
</section>

<style>
	section {
		position: relative;
		background-image: url('/pattern.svg');
		background-size: 200px;
	}
	section::after {
		content: ' ';
		position: absolute;
		width: 100%;
		height: 30px;
		background-image: linear-gradient(
			180deg,
			rgba(92, 110, 108, 0.5) 100%,
			rgba(92, 110, 108, 1) 50%
		);
		top: 0;
		z-index: 5;
	}
</style>
